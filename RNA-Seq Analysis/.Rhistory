life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962 | Year == 2007) %>% group_by(Country.Name) %>% summarize(life_exp_1962 = Life.expectancy.at.birth..total..years.[Year == 1962], Life.expectancy.at.birth..total..years.[Year == 2007])
life_expectancy
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962 | Year == 2007) %>% group_by(Country.Name) %>% summarize(life_exp_1962 = Life.expectancy.at.birth..total..years.[Year == 1962], life_exp_2007 = Life.expectancy.at.birth..total..years.[Year == 2007], life_exp_diff = life_exp_2007 - life_exp_1962)
life_expectancy
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962 | Year == 2007) %>% group_by(Country.Name) %>% summarize(life_exp_1962 = Life.expectancy.at.birth..total..years.[Year == 1962], life_exp_2007 = Life.expectancy.at.birth..total..years.[Year == 2007], life_exp_diff = life_exp_2007 - life_exp_1962) %>% arrange(desc(life_exp_diff))
life_expectancy
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962 | Year == 2007) %>% group_by(Country.Name) %>% summarize(life_exp_1962 = Life.expectancy.at.birth..total..years.[Year == 1962], life_exp_2007 = Life.expectancy.at.birth..total..years.[Year == 2007], life_exp_diff = life_exp_2007 - life_exp_1962) %>% arrange(desc(life_exp_diff)) %>% head(10)
life_expectancy
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962 | Year == 2007) %>% group_by(Country.Name) %>% summarize(life_exp_1962 = Life.expectancy.at.birth..total..years.[Year == 1962], life_exp_2007 = Life.expectancy.at.birth..total..years.[Year == 2007], life_exp_diff = life_exp_2007 - life_exp_1962) %>% arrange(desc(life_exp_diff)) %>% head(10)
life_expectancy
P <- life_expectancy %>% ggplot(aes(Country.Name, life_exp_diff)) + geom_point(col="tomato2", size=3) +
geom_segment(aes(x=Country.Name,
xend=Country.Name,
y=min(lifeExpDiff),
yend=max(lifeExpDiff)),
linetype="dashed",
size=0.1) +
ylab("Difference in Life Expectancy between 2007 and 1962 (Years)") +
xlab("Country") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(title = "Top 20 Countries with Greatest Increase in Life Expectancy") +
coord_flip() + theme_classic()
P <- life_expectancy %>% ggplot(aes(Country.Name, life_exp_diff)) + geom_point(col="tomato2", size=3) +
geom_segment(aes(x=Country.Name,
xend=Country.Name,
y=min(lifeExpDiff),
yend=max(lifeExpDiff)),
linetype="dashed",
size=0.1) +
ylab("Difference in Life Expectancy between 2007 and 1962 (Years)") +
xlab("Country") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(title = "Top 20 Countries with Greatest Increase in Life Expectancy") +
coord_flip() + theme_classic()
p
P <- life_expectancy %>% ggplot(aes(Country.Name, life_exp_diff)) + geom_point(col="tomato2", size=3) +
geom_segment(aes(x=Country.Name,
xend=Country.Name,
y=min(lifeExpDiff),
yend=max(lifeExpDiff)),
linetype="dashed",
size=0.1) +
ylab("Difference in Life Expectancy between 2007 and 1962 (Years)") +
xlab("Country") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(title = "Top 20 Countries with Greatest Increase in Life Expectancy") +
coord_flip() + theme_classic()
p
p <- life_expectancy %>% ggplot(aes(Country.Name, life_exp_diff)) + geom_point(col="tomato2", size=3) +
geom_segment(aes(x=Country.Name,
xend=Country.Name,
y=min(lifeExpDiff),
yend=max(lifeExpDiff)),
linetype="dashed",
size=0.1) +
ylab("Difference in Life Expectancy between 2007 and 1962 (Years)") +
xlab("Country") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(title = "Top 20 Countries with Greatest Increase in Life Expectancy") +
coord_flip() + theme_classic()
p
p <- life_expectancy %>% ggplot(aes(Country.Name, life_exp_diff)) + geom_point(col="tomato2", size=3) +
geom_segment(aes(x=Country.Name,
xend=Country.Name,
y=min(life_exp_diff),
yend=max(life_exp_diff)),
linetype="dashed",
size=0.1) +
ylab("Difference in Life Expectancy between 2007 and 1962 (Years)") +
xlab("Country") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(title = "Top 20 Countries with Greatest Increase in Life Expectancy") +
coord_flip() + theme_classic()
p
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962 | Year == 2007) %>% group_by(Country.Name) %>% summarize(life_exp_1962 = Life.expectancy.at.birth..total..years.[Year == 1962], life_exp_2007 = Life.expectancy.at.birth..total..years.[Year == 2007], life_exp_diff = life_exp_2007 - life_exp_1962) %>% arrange(desc(life_exp_diff)) %>% head(10) %>% transform(Country.Name=reorder(Country.Name, -life_exp_diff))
life_expectancy
p <- life_expectancy %>% ggplot(aes(Country.Name, life_exp_diff)) + geom_point(col="tomato2", size=3) +
geom_segment(aes(x=Country.Name,
xend=Country.Name,
y=min(life_exp_diff),
yend=max(life_exp_diff)),
linetype="dashed",
size=0.1) +
ylab("Difference in Life Expectancy between 2007 and 1962 (Years)") +
xlab("Country") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(title = "Top 20 Countries with Greatest Increase in Life Expectancy") +
coord_flip() + theme_classic()
p
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962 | Year == 2007) %>% group_by(Country.Name) %>% summarize(life_exp_1962 = Life.expectancy.at.birth..total..years.[Year == 1962], life_exp_2007 = Life.expectancy.at.birth..total..years.[Year == 2007], life_exp_diff = life_exp_2007 - life_exp_1962) %>% arrange(desc(life_exp_diff)) %>% head(10) %>% transform(Country.Name=reorder(Country.Name, life_exp_diff))
life_expectancy
p <- life_expectancy %>% ggplot(aes(Country.Name, life_exp_diff)) + geom_point(col="tomato2", size=3) +
geom_segment(aes(x=Country.Name,
xend=Country.Name,
y=min(life_exp_diff),
yend=max(life_exp_diff)),
linetype="dashed",
size=0.1) +
ylab("Difference in Life Expectancy between 2007 and 1962 (Years)") +
xlab("Country") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(title = "Top 20 Countries with Greatest Increase in Life Expectancy") +
coord_flip() + theme_classic()
p
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962 | Year == 2007) %>% group_by(Country.Name) %>% summarize(life_exp_1962 = Life.expectancy.at.birth..total..years.[Year == 1962], life_exp_2007 = Life.expectancy.at.birth..total..years.[Year == 2007], life_exp_diff = life_exp_2007 - life_exp_1962) %>% arrange(desc(life_exp_diff)) %>% head(20) %>% transform(Country.Name=reorder(Country.Name, life_exp_diff))
life_expectancy
p <- life_expectancy %>% ggplot(aes(Country.Name, life_exp_diff)) + geom_point(col="tomato2", size=3) +
geom_segment(aes(x=Country.Name,
xend=Country.Name,
y=min(life_exp_diff),
yend=max(life_exp_diff)),
linetype="dashed",
size=0.1) +
ylab("Difference in Life Expectancy between 2007 and 1962 (Years)") +
xlab("Country") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(title = "Top 20 Countries with Greatest Increase in Life Expectancy") +
coord_flip() + theme_classic()
p
install.packages('ChIPseeker')
BiocManager::install("ChIPseeker")
knitr::opts_chunk$set(echo = TRUE)
library(ChIPseeker)
tools:::.BioC_version_associated_with_R_version()
tools:::.BioC_version_associated_with_R_version()
library(ChIPseeker)
BiocManager::install("DO.db")
library(ChIPseeker)
BiocManager::install("GO.db")
library(ChIPseeker)
library(ChIPseeker)
library(ChIPseeker)
library(ChIPseeker)
BiocManager::install("ChIPseeker")
BiocManager::install("ChIPseeker", force=TRUE)
library(ChIPseeker)
library(ChIPseeker)
library(ChIPseeker)
install.packages("Rcpp", dependencies = TRUE)
install.packages("Rcpp", dependencies = TRUE)
library(ChIPseeker)
remove.packages("ChIPseeker")
library(ChIPseeker)
BiocManager::install("ChIPseeker")
library(ChIPseeker)
remove.packages("GO.db")
library(ChIPseeker)
library(ChIPseeker)
BiocManager::install("ChIPpeakAnno")
library(ChiPpeakAnno)
library(ChIPpeakAnno)
library(ggplot)
library(tidyverse)
install.packages('tidyverse')
library(tidyverse)
library(ggplot2)
library(plotly)
library(tidyverse)
library(ggplot2)
library(plotly)
library(tidyverse)
library(ggplot2)
library(plotly)
install.packages('plotly')
library(tidyverse)
library(ggplot2)
library(plotly)
options(warn=-1)
gapminder <- read.csv("gapminder_clean.csv", header=TRUE)
gapminder_1962 <- gapminder %>% filter(Year == 1962) %>% select(CO2.emissions..metric.tons.per.capita., gdpPercap) %>% na.omit()
### Without Log Scale
gapminder_1962 %>% ggplot(aes(x=CO2.emissions..metric.tons.per.capita., y=gdpPercap)) +
geom_point(colour="black", shape=21, alpha = 1, stroke = 1, size=3, fill="orange") +
xlab("CO2 Emissions (Metric Tons) per Capita") +
ylab("GDP per Capita") +
ggtitle(label="CO2 Emissions vs. GDP per Capita, Year 1962") +
theme(legend.position = "right") +
theme_classic()
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.16")
BiocManager::install("ChIPseeker")
library(ChIPseeker)
BiocManager::install("DO.db")
library(ChIPseeker)
Simple, use the latest version of R and Bioconductor, now on version 3.6.1 and Bioconductor 3.9. Those are the versions that are supported. If you can't upgrade R, check that BiocManager::valid()
Simple, use the latest version of R and Bioconductor, now on version 3.6.1 and Bioconductor 3.9. Those are the versions that are supported. If you can't upgrade R, check that BiocManager::valid()
BiocManager::valid()
BiocManager::install("GO.db")
library(ChIPseeker)
BiocManager::install("HDO.db")
library(ChIPseeker)
install.packages("rxode2")
library(rxode2)
source('~/Desktop/Zheng Lab/PPS_PK/src/run_pbpk.R', echo=TRUE)
source('~/Desktop/Zheng Lab/PPS_PK/src/run_pbpk.R', echo=TRUE)
SimplePBPK <- RxODE({
#### PBPK Model ------------------
bf_tot <- 0
outflow_tot <- 0
outflow_spl <- 0
### Parallel Tissue Equations
# 1. Brain
brain_outflow <- organ_bf_brain * (brain/organ_v_brain)/(part_coeff_brain/BP)
d/dt(brain) <- (organ_bf_brain * arterial_blood/organ_v_arterial_blood) - brain_outflow
bf_tot <- bf_tot + organ_bf_brain
outflow_tot <- outflow_tot + brain_outflow
# 2. Heart
heart_outflow <- organ_bf_heart * (heart/organ_v_heart)/(part_coeff_heart/BP)
d/dt(heart) <- (organ_bf_heart * arterial_blood/organ_v_arterial_blood) - heart_outflow
bf_tot <- bf_tot + organ_bf_heart
outflow_tot <- outflow_tot + heart_outflow
# 3. Bone
bone_outflow <- organ_bf_bone * (bone/organ_v_bone)/(part_coeff_bone/BP)
d/dt(bone) <- (organ_bf_bone * arterial_blood/organ_v_arterial_blood) - bone_outflow
bf_tot <- bf_tot + organ_bf_bone
outflow_tot <- outflow_tot + bone_outflow
# 4. Muscle
muscle_outflow <- organ_bf_muscle * (muscle/organ_v_muscle)/(part_coeff_muscle/BP)
d/dt(muscle) <- (organ_bf_muscle * arterial_blood/organ_v_arterial_blood) - muscle_outflow
bf_tot <- bf_tot + organ_bf_muscle
outflow_tot <- outflow_tot + muscle_outflow
# 5. Skin
skin_outflow <- organ_bf_skin * (skin/organ_v_skin)/(part_coeff_skin/BP)
d/dt(skin) <- (organ_bf_skin * arterial_blood/organ_v_arterial_blood) - skin_outflow
bf_tot <- bf_tot + organ_bf_skin
outflow_tot <- outflow_tot + skin_outflow
# 6. Kidneys
clear_kid <- (CLr * fup/ part_coeff_kidneys) * (kidneys/organ_v_kidneys) - (general_p_GFR * fup * arterial_blood/(organ_v_kidneys * BP) * GFR_flag)
kidneys_outflow <- organ_bf_kidneys * (kidneys/organ_v_kidneys)/(part_coeff_kidneys/BP)
d/dt(kidneys) <- (organ_bf_kidneys * arterial_blood/organ_v_arterial_blood) - kidneys_outflow - clear_kid
bf_tot <- bf_tot + organ_bf_kidneys
outflow_tot <- outflow_tot + kidneys_outflow
### Spanching Organs Equations
# 7. Stomach
stomach_outflow <- organ_bf_stomach * (stomach/organ_v_stomach)/(part_coeff_stomach/BP)
d/dt(stomach) <- organ_bf_stomach * arterial_blood/organ_v_arterial_blood - stomach_outflow
bf_tot <- bf_tot + organ_bf_stomach
outflow_spl <- outflow_spl + stomach_outflow
# 8. Spleen
spleen_outflow <- organ_bf_spleen * (spleen/organ_v_spleen)/(part_coeff_spleen/BP)
d/dt(spleen) <- organ_bf_spleen * arterial_blood/organ_v_arterial_blood - spleen_outflow
bf_tot <- bf_tot + organ_bf_spleen
outflow_spl <- outflow_spl + spleen_outflow
# 9. Pancreas
pancreas_outflow <- organ_bf_pancreas * (pancreas/organ_v_pancreas)/(part_coeff_spleen/BP)
d/dt(pancreas) <- organ_bf_pancreas * arterial_blood/organ_v_arterial_blood - pancreas_outflow
bf_tot <- bf_tot + organ_bf_pancreas
outflow_spl <- outflow_spl + pancreas_outflow
# 10. Liver
organ_bf_liver <- organ_bf_liver + organ_bf_pancreas + organ_bf_spleen + organ_bf_stomach
liver_outflow <- organ_bf_liv_tot * (liver/organ_v_liver)/(part_coeff_liver/BP)
clear_liv <- CLh * fup * (liver/organ_v_liver)/(part_coeff_liver)
d/dt(liver) <- outflow_spl + organ_bf_liver * arterial_blood/organ_v_arterial_blood - clear_liv - liver_outflow
bf_tot <- bf_tot + organ_bf_liver
outflow_tot <- outflow_tot + liver_outflow
# 11 Venous Blood
venous_outflow <- bf_tot * venous_blood/organ_v_venous_blood
d/dt(venous_blood) <- outflow_tot - venous_outflow
# 12. Lung
lung_outflow <- bf_tot * (lungs/organ_v_lungs)/(part_coeff_lungs/BP)
d/dt(lungs) <- venous_outflow - lung_outflow
# 13. Arterial blood Equation
d/dt(arterial_blood) <- outflow_lung - bf_tot * arterial_blood/organ_v_arterial_blood
# Sink Compartments
d/dt(sink_CLh) <- clear_liv
d/dt(sink_CLr) <- clear_kid
plasma_conc <- venous_blood/BP/organ_v_venous_blood
})
params <- c(organ_bf_brain=0.0078, organ_bf_lungs=0.3282, organ_bf_heart=0.0168,
organ_bf_kidneys=0.078, organ_bf_bone=0.01518, organ_bf_muscle=0.0546,
organ_bf_stomach=0.0066, organ_bf_spleen=0.0054, organ_bf_liver=0.021,
organ_bf_pancreas=0.00312, organ_bf_skin=0.0246, organ_bf_arterial_blood=0.3282,
organ_bf_venous_blood=0.3282, organ_v_brain=0.0001, organ_v_brain=0.0017,
organ_bf_heart=0.000095, organ_v_kidneys=0.00034, organ_v_bone=0.00034,
organ_v_bone=0.00158, organ_v_muscle=0.01, organ_v_stomach=0.00011, organ_v_spleen=0.0001,
organ_v_liver=0.0013, organ_v_pancreas=0.00013, organ_v_skin=0.0029, organ_v_arterial_blood=0.000228,
organ_v_venous_blood=0.000228, part_coeff_muscle=0.08375, part_coeff_spleen=1.882661,
part_coeff_liver=1.839, part_coeff_kidneys=0.64497, part_coeff_lungs=0.35538, part_coeff_brain=0.025998,
part_coeff_bone=0.1553, part_coeff_pancreas=0.114374, part_coeff_skin=0.268582, part_coeff_stomach=0.22187,
part_coeff_heart=0.287337, BP=0.5, fup=0.1, CLh=10, CLr=10, general_p_GFR=0.01765008, GFR_flag=1)
SimplePBPK <- rxode2({
#### PBPK Model ------------------
bf_tot <- 0
outflow_tot <- 0
outflow_spl <- 0
### Parallel Tissue Equations
# 1. Brain
brain_outflow <- organ_bf_brain * (brain/organ_v_brain)/(part_coeff_brain/BP)
d/dt(brain) <- (organ_bf_brain * arterial_blood/organ_v_arterial_blood) - brain_outflow
bf_tot <- bf_tot + organ_bf_brain
outflow_tot <- outflow_tot + brain_outflow
# 2. Heart
heart_outflow <- organ_bf_heart * (heart/organ_v_heart)/(part_coeff_heart/BP)
d/dt(heart) <- (organ_bf_heart * arterial_blood/organ_v_arterial_blood) - heart_outflow
bf_tot <- bf_tot + organ_bf_heart
outflow_tot <- outflow_tot + heart_outflow
# 3. Bone
bone_outflow <- organ_bf_bone * (bone/organ_v_bone)/(part_coeff_bone/BP)
d/dt(bone) <- (organ_bf_bone * arterial_blood/organ_v_arterial_blood) - bone_outflow
bf_tot <- bf_tot + organ_bf_bone
outflow_tot <- outflow_tot + bone_outflow
# 4. Muscle
muscle_outflow <- organ_bf_muscle * (muscle/organ_v_muscle)/(part_coeff_muscle/BP)
d/dt(muscle) <- (organ_bf_muscle * arterial_blood/organ_v_arterial_blood) - muscle_outflow
bf_tot <- bf_tot + organ_bf_muscle
outflow_tot <- outflow_tot + muscle_outflow
# 5. Skin
skin_outflow <- organ_bf_skin * (skin/organ_v_skin)/(part_coeff_skin/BP)
d/dt(skin) <- (organ_bf_skin * arterial_blood/organ_v_arterial_blood) - skin_outflow
bf_tot <- bf_tot + organ_bf_skin
outflow_tot <- outflow_tot + skin_outflow
# 6. Kidneys
clear_kid <- (CLr * fup/ part_coeff_kidneys) * (kidneys/organ_v_kidneys) - (general_p_GFR * fup * arterial_blood/(organ_v_kidneys * BP) * GFR_flag)
kidneys_outflow <- organ_bf_kidneys * (kidneys/organ_v_kidneys)/(part_coeff_kidneys/BP)
d/dt(kidneys) <- (organ_bf_kidneys * arterial_blood/organ_v_arterial_blood) - kidneys_outflow - clear_kid
bf_tot <- bf_tot + organ_bf_kidneys
outflow_tot <- outflow_tot + kidneys_outflow
### Spanching Organs Equations
# 7. Stomach
stomach_outflow <- organ_bf_stomach * (stomach/organ_v_stomach)/(part_coeff_stomach/BP)
d/dt(stomach) <- organ_bf_stomach * arterial_blood/organ_v_arterial_blood - stomach_outflow
bf_tot <- bf_tot + organ_bf_stomach
outflow_spl <- outflow_spl + stomach_outflow
# 8. Spleen
spleen_outflow <- organ_bf_spleen * (spleen/organ_v_spleen)/(part_coeff_spleen/BP)
d/dt(spleen) <- organ_bf_spleen * arterial_blood/organ_v_arterial_blood - spleen_outflow
bf_tot <- bf_tot + organ_bf_spleen
outflow_spl <- outflow_spl + spleen_outflow
# 9. Pancreas
pancreas_outflow <- organ_bf_pancreas * (pancreas/organ_v_pancreas)/(part_coeff_spleen/BP)
d/dt(pancreas) <- organ_bf_pancreas * arterial_blood/organ_v_arterial_blood - pancreas_outflow
bf_tot <- bf_tot + organ_bf_pancreas
outflow_spl <- outflow_spl + pancreas_outflow
# 10. Liver
organ_bf_liver <- organ_bf_liver + organ_bf_pancreas + organ_bf_spleen + organ_bf_stomach
liver_outflow <- organ_bf_liv_tot * (liver/organ_v_liver)/(part_coeff_liver/BP)
clear_liv <- CLh * fup * (liver/organ_v_liver)/(part_coeff_liver)
d/dt(liver) <- outflow_spl + organ_bf_liver * arterial_blood/organ_v_arterial_blood - clear_liv - liver_outflow
bf_tot <- bf_tot + organ_bf_liver
outflow_tot <- outflow_tot + liver_outflow
# 11 Venous Blood
venous_outflow <- bf_tot * venous_blood/organ_v_venous_blood
d/dt(venous_blood) <- outflow_tot - venous_outflow
# 12. Lung
lung_outflow <- bf_tot * (lungs/organ_v_lungs)/(part_coeff_lungs/BP)
d/dt(lungs) <- venous_outflow - lung_outflow
# 13. Arterial blood Equation
d/dt(arterial_blood) <- outflow_lung - bf_tot * arterial_blood/organ_v_arterial_blood
# Sink Compartments
d/dt(sink_CLh) <- clear_liv
d/dt(sink_CLr) <- clear_kid
plasma_conc <- venous_blood/BP/organ_v_venous_blood
})
source('~/Desktop/Zheng Lab/PPS_PK/src/run_pbpk.R', echo=TRUE)
SimplePBPK <- rxode2({
#### PBPK Model ------------------
bf_tot <- 0
outflow_tot <- 0
outflow_spl <- 0
### Parallel Tissue Equations
# 1. Brain
brain_outflow <- organ_bf_brain * (brain/organ_v_brain)/(part_coeff_brain/BP)
d/dt(brain) <- (organ_bf_brain * arterial_blood/organ_v_arterial_blood) - brain_outflow
bf_tot <- bf_tot + organ_bf_brain
outflow_tot <- outflow_tot + brain_outflow
# 2. Heart
heart_outflow <- organ_bf_heart * (heart/organ_v_heart)/(part_coeff_heart/BP)
d/dt(heart) <- (organ_bf_heart * arterial_blood/organ_v_arterial_blood) - heart_outflow
bf_tot <- bf_tot + organ_bf_heart
outflow_tot <- outflow_tot + heart_outflow
# 3. Bone
bone_outflow <- organ_bf_bone * (bone/organ_v_bone)/(part_coeff_bone/BP)
d/dt(bone) <- (organ_bf_bone * arterial_blood/organ_v_arterial_blood) - bone_outflow
bf_tot <- bf_tot + organ_bf_bone
outflow_tot <- outflow_tot + bone_outflow
# 4. Muscle
muscle_outflow <- organ_bf_muscle * (muscle/organ_v_muscle)/(part_coeff_muscle/BP)
d/dt(muscle) <- (organ_bf_muscle * arterial_blood/organ_v_arterial_blood) - muscle_outflow
bf_tot <- bf_tot + organ_bf_muscle
outflow_tot <- outflow_tot + muscle_outflow
# 5. Skin
skin_outflow <- organ_bf_skin * (skin/organ_v_skin)/(part_coeff_skin/BP)
d/dt(skin) <- (organ_bf_skin * arterial_blood/organ_v_arterial_blood) - skin_outflow
bf_tot <- bf_tot + organ_bf_skin
outflow_tot <- outflow_tot + skin_outflow
# 6. Kidneys
clear_kid <- (CLr * fup/ part_coeff_kidneys) * (kidneys/organ_v_kidneys) - (general_p_GFR * fup * arterial_blood/(organ_v_kidneys * BP) * GFR_flag)
kidneys_outflow <- organ_bf_kidneys * (kidneys/organ_v_kidneys)/(part_coeff_kidneys/BP)
d/dt(kidneys) <- (organ_bf_kidneys * arterial_blood/organ_v_arterial_blood) - kidneys_outflow - clear_kid
bf_tot <- bf_tot + organ_bf_kidneys
outflow_tot <- outflow_tot + kidneys_outflow
### Spanching Organs Equations
# 7. Stomach
stomach_outflow <- organ_bf_stomach * (stomach/organ_v_stomach)/(part_coeff_stomach/BP)
d/dt(stomach) <- organ_bf_stomach * arterial_blood/organ_v_arterial_blood - stomach_outflow
bf_tot <- bf_tot + organ_bf_stomach
outflow_spl <- outflow_spl + stomach_outflow
# 8. Spleen
spleen_outflow <- organ_bf_spleen * (spleen/organ_v_spleen)/(part_coeff_spleen/BP)
d/dt(spleen) <- organ_bf_spleen * arterial_blood/organ_v_arterial_blood - spleen_outflow
bf_tot <- bf_tot + organ_bf_spleen
outflow_spl <- outflow_spl + spleen_outflow
# 9. Pancreas
pancreas_outflow <- organ_bf_pancreas * (pancreas/organ_v_pancreas)/(part_coeff_spleen/BP)
d/dt(pancreas) <- organ_bf_pancreas * arterial_blood/organ_v_arterial_blood - pancreas_outflow
bf_tot <- bf_tot + organ_bf_pancreas
outflow_spl <- outflow_spl + pancreas_outflow
# 10. Liver
organ_bf_liver <- organ_bf_liver + organ_bf_pancreas + organ_bf_spleen + organ_bf_stomach
liver_outflow <- organ_bf_liv_tot * (liver/organ_v_liver)/(part_coeff_liver/BP)
clear_liv <- CLh * fup * (liver/organ_v_liver)/(part_coeff_liver)
d/dt(liver) <- outflow_spl + organ_bf_liver * arterial_blood/organ_v_arterial_blood - clear_liv - liver_outflow
bf_tot <- bf_tot + organ_bf_liver
outflow_tot <- outflow_tot + liver_outflow
# 11 Venous Blood
venous_outflow <- bf_tot * venous_blood/organ_v_venous_blood
d/dt(venous_blood) <- outflow_tot - venous_outflow
# 12. Lung
lung_outflow <- bf_tot * (lungs/organ_v_lungs)/(part_coeff_lungs/BP)
d/dt(lungs) <- venous_outflow - lung_outflow
# 13. Arterial blood Equation
d/dt(arterial_blood) <- outflow_lung - bf_tot * arterial_blood/organ_v_arterial_blood
# Sink Compartments
d/dt(sink_CLh) <- clear_liv
d/dt(sink_CLr) <- clear_kid
plasma_conc <- venous_blood/BP/organ_v_venous_blood
})
x
params <- c(organ_bf_brain=0.0078, organ_bf_lungs=0.3282, organ_bf_heart=0.0168,
organ_bf_kidneys=0.078, organ_bf_bone=0.01518, organ_bf_muscle=0.0546,
organ_bf_stomach=0.0066, organ_bf_spleen=0.0054, organ_bf_liver=0.021,
organ_bf_pancreas=0.00312, organ_bf_skin=0.0246, organ_bf_arterial_blood=0.3282,
organ_bf_venous_blood=0.3282, organ_v_brain=0.0001, organ_v_brain=0.0017,
organ_bf_heart=0.000095, organ_v_kidneys=0.00034, organ_v_bone=0.00034,
organ_v_bone=0.00158, organ_v_muscle=0.01, organ_v_stomach=0.00011, organ_v_spleen=0.0001,
organ_v_liver=0.0013, organ_v_pancreas=0.00013, organ_v_skin=0.0029, organ_v_arterial_blood=0.000228,
organ_v_venous_blood=0.000228, part_coeff_muscle=0.08375, part_coeff_spleen=1.882661,
part_coeff_liver=1.839, part_coeff_kidneys=0.64497, part_coeff_lungs=0.35538, part_coeff_brain=0.025998,
part_coeff_bone=0.1553, part_coeff_pancreas=0.114374, part_coeff_skin=0.268582, part_coeff_stomach=0.22187,
part_coeff_heart=0.287337, BP=0.5, fup=0.1, CLh=10, CLr=10, general_p_GFR=0.01765008, GFR_flag=1)
x <- SimplePBPK$solve(params)
source('~/Desktop/Zheng Lab/PPS_PK/src/run_pbpk.R', echo=TRUE)
ev <- eventTable(amount.units='mg', time.units='hours')
x <- SimplePBPK$solve(params, ev)
inits <- c()
x <- SimplePBPK$solve(params, ev, inits)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ev$add.sampling(0:240)
ev$add.dosing(dose=10000, nbr.doses=10, dosing.interval=12)
ev$add.dosing(dose=20000, nbr.doses=5, start.time=120,
dosing.interval=24)
ev$add.sampling(0:240)
x <- mod1$solve(theta, ev, inits);
x
source('~/.active-rstudio-document', echo=TRUE)
source('~/Desktop/Zheng Lab/PPS_PK/src/run_pbpk.R', echo=TRUE)
View(top_density_year)
library(tidyverse)
library(ggplot2)
library(plotly)
options(warn=-1)
setwd("~/Desktop/training-requirements/RNA-Seq Analysis")
BiocManager::install("DESeq2")
library(DESeq2)
library(DESeq2)
rse <- readRDS("EwS.rds")
rse$condition
BiocManager::install("EnhancedVolcano")
BiocManager::install("pheatmap")
BiocManager::install("enrichR")
BiocManager
BiocManager::install("msigdbr")
BiocManager::install("clusterProfiler")
rse <- readRDS("EwS.rds")
rse$condition
rse
rse <- readRDS("EwS.rds")
head(assay(rse))
rse <- readRDS("EwS.rds")
rowData(rse)
rse <- readRDS("EwS.rds")
colData(rse)
rse <- readRDS("EwS.rds")
dds <- DESeqDataSet(rse, design = ~ cell + dex)
rse
head(rse)
head(assay(rse))
rse$condition
colnames(rse)
colData(rse)
rse$project
rse <- readRDS("EwS.rds")
dds <- DESeqDataSet(rse, design = ~condition)
dds
nrow(dds)
rse <- readRDS("EwS.rds")
dds <- DESeqDataSet(rse, design = ~condition)
rld <- rlog(dds)
plotPCA(rld, intgroup="condition")
res <- results(dds)
dds <- DESeq(dds)
res <- results(dds)
dds <- DESeq(dds)
res <- results(dds)
plotMA(res)
dds <- DESeq(dds)
res <- lfcShrink(dds, type="normal")
dds <- DESeq(dds)
res <- lfcShrink(dds, type="normal", coef=2)
plotMA(res)
