p <- continent_import %>% ggplot(aes(x = as.factor(Year), y = Imports.of.goods.and.services....of.GDP., fill = continent)) + geom_boxplot() +
xlab("Year") + ylab("Imports of Goods and Services (% of GDP)") +
ggtitle(label = "Asia vs. Europe Imports after 1990") +
theme_classic()
ggplotly(p) %>% layout(width = 800, boxmode = "group")
continent_import <- gapminder %>% select(Year, continent, Imports.of.goods.and.services....of.GDP.) %>% na.omit() %>%
filter(Year > 1990) %>% filter(continent == "Europe" | continent == "Asia") %>% mutate(Year = as.factor(Year))
p <- continent_import %>% ggplot(aes(x = Year, y = Imports.of.goods.and.services....of.GDP., fill = continent)) + geom_boxplot() +
xlab("Year") + ylab("Imports of Goods and Services (% of GDP)") +
ggtitle(label = "Asia vs. Europe Imports after 1990") +
theme_classic()
ggplotly(p) %>% layout(width = 800, boxmode = "group")
two_way <- aov(Imports.of.goods.and.services....of.GDP ~ continent + Year, data = continent_import)
continent_import <- gapminder %>% select(Year, continent, Imports.of.goods.and.services....of.GDP.) %>% na.omit() %>%
filter(Year > 1990) %>% filter(continent == "Europe" | continent == "Asia") %>% mutate(Year = as.factor(Year))
p <- continent_import %>% ggplot(aes(x = Year, y = Imports.of.goods.and.services....of.GDP., fill = continent)) + geom_boxplot() +
xlab("Year") + ylab("Imports of Goods and Services (% of GDP)") +
ggtitle(label = "Asia vs. Europe Imports after 1990") +
theme_classic()
ggplotly(p) %>% layout(width = 800, boxmode = "group")
two_way <- aov(Imports.of.goods.and.services....of.GDP ~ continent + Year, data = continent_import)
continent_import
two_way <- aov(Imports.of.goods.and.services....of.GDP. ~ continent + Year, data = continent_import)
summary(two_way)
library(tidyverse)
library(ggplot2)
library(plotly)
options(warn=-1)
gapminder <- read.csv("gapminder_clean.csv", header=TRUE)
gapminder_1962 <- gapminder %>% filter(Year == 1962) %>% select(CO2.emissions..metric.tons.per.capita., gdpPercap) %>% na.omit()
### Without Log Scale
gapminder_1962 %>% ggplot(aes(x=CO2.emissions..metric.tons.per.capita., y=gdpPercap)) +
geom_point(colour="black", shape=21, alpha = 1, stroke = 1, size=3, fill="orange") +
xlab("CO2 Emissions (Metric Tons) per Capita") +
ylab("GDP per Capita") +
ggtitle(label="CO2 Emissions vs. GDP per Capita, Year 1962") +
theme(legend.position = "right") +
theme_classic() +
scale_y_continuous(labels = comma)
gapminder <- read.csv("gapminder_clean.csv", header=TRUE)
gapminder_1962 <- gapminder %>% filter(Year == 1962) %>% select(CO2.emissions..metric.tons.per.capita., gdpPercap) %>% na.omit()
### Without Log Scale
gapminder_1962 %>% ggplot(aes(x=CO2.emissions..metric.tons.per.capita., y=gdpPercap)) +
geom_point(colour="black", shape=21, alpha = 1, stroke = 1, size=3, fill="orange") +
xlab("CO2 Emissions (Metric Tons) per Capita") +
ylab("GDP per Capita") +
ggtitle(label="CO2 Emissions vs. GDP per Capita, Year 1962") +
theme(legend.position = "right") +
theme_classic() +
scale_y_continuous(labels = comma)
gapminder <- read.csv("gapminder_clean.csv", header=TRUE)
gapminder_1962 <- gapminder %>% filter(Year == 1962) %>% select(CO2.emissions..metric.tons.per.capita., gdpPercap) %>% na.omit()
### Without Log Scale
gapminder_1962 %>% ggplot(aes(x=CO2.emissions..metric.tons.per.capita., y=gdpPercap)) +
geom_point(colour="black", shape=21, alpha = 1, stroke = 1, size=3, fill="orange") +
xlab("CO2 Emissions (Metric Tons) per Capita") +
ylab("GDP per Capita") +
ggtitle(label="CO2 Emissions vs. GDP per Capita, Year 1962") +
theme(legend.position = "right") +
theme_classic() +
scale_y_continuous()
gapminder <- read.csv("gapminder_clean.csv", header=TRUE)
gapminder_1962 <- gapminder %>% filter(Year == 1962) %>% select(CO2.emissions..metric.tons.per.capita., gdpPercap) %>% na.omit()
### Without Log Scale
gapminder_1962 %>% ggplot(aes(x=CO2.emissions..metric.tons.per.capita., y=gdpPercap)) +
geom_point(colour="black", shape=21, alpha = 1, stroke = 1, size=3, fill="orange") +
xlab("CO2 Emissions (Metric Tons) per Capita") +
ylab("GDP per Capita") +
ggtitle(label="CO2 Emissions vs. GDP per Capita, Year 1962") +
theme(legend.position = "right") +
theme_classic()
### With Log Scale
gapminder_1962 %>% ggplot(aes(x=CO2.emissions..metric.tons.per.capita., y=gdpPercap)) +
geom_point(colour="black", shape=21, alpha = 1, stroke = 1, size=3, fill="orange") +
xlab("CO2 Emissions (Metric Tons) per Capita") +
ylab("GDP per Capita") +
ggtitle(label="CO2 Emissions vs. GDP per Capita, Year 1962", subtitle = "Logarithmic Scale") +
geom_smooth(method = "lm", se = FALSE, colour = "red") +
theme(legend.position = "right") +
theme_classic() +
scale_x_log10() +
scale_y_log10()
gapminder_1962_corr <- gapminder_1962 %>% mutate(CO2Log = log(CO2.emissions..metric.tons.per.capita.), GDPLog = log(gdpPercap)) %>%
summarize(correl_coeff = cor.test(x = CO2Log, y = GDPLog, method = "pearson")$estimate, p_value = cor.test(x = CO2Log, y = GDPLog, method = "pearson")$p.value)
gapminder_corr <- gapminder %>% select(Year, CO2.emissions..metric.tons.per.capita., gdpPercap) %>% na.omit() %>%
mutate(CO2Log = log(CO2.emissions..metric.tons.per.capita.), GDPLog = log(gdpPercap)) %>%
group_by(Year) %>%
summarize(correl_coeff = cor.test(x = CO2Log, y = GDPLog, method = "pearson")$estimate, p_value = cor.test(x = CO2Log, y = GDPLog, method = "pearson")$p.value) %>% arrange(desc(correl_coeff))
gapminder_corr
gapminder_2002 <- gapminder %>% filter(Year == 2002) %>%
select(CO2.emissions..metric.tons.per.capita., gdpPercap, pop, continent) %>% na.omit()
p <- gapminder_2002 %>% ggplot(aes(x = CO2.emissions..metric.tons.per.capita., y = gdpPercap, size = pop)) +
geom_point(aes(fill = continent), color = "black", pch= 21) +
xlab("CO2 Emissions (Metric Tons) per Capita") +
ylab("GDP per Capita") +
ggtitle(label = "CO2 Emissions vs. GDP per Capita, Year = 2002", subtitle = "Logarithmic Scale") +
scale_x_log10() +
scale_y_log10() +
theme_classic() +
theme(legend.position = "right")
ggplotly(p, width= 600, height = 600)
energy_continent <- gapminder %>% select(continent, Energy.use..kg.of.oil.equivalent.per.capita.) %>% na.omit() %>% filter(continent != "")
p <- energy_continent %>% ggplot(aes(x = continent, y = Energy.use..kg.of.oil.equivalent.per.capita.)) +
geom_boxplot() +
xlab("Continents") +
ylab("Energy Use (kg of Oil) per Capita") +
ggtitle(label = "Energy Use per Capita by Continent", subtitle = "Logarithmic Scale") +
theme_classic() +
scale_y_log10()
ggplotly(p, width = 600, height = 600)
one_way <- aov(Energy.use..kg.of.oil.equivalent.per.capita. ~ continent, data = energy_continent)
summary(one_way)
continent_import <- gapminder %>% select(Year, continent, Imports.of.goods.and.services....of.GDP.) %>% na.omit() %>%
filter(Year > 1990) %>% filter(continent == "Europe" | continent == "Asia") %>% mutate(Year = as.factor(Year))
p <- continent_import %>% ggplot(aes(x = Year, y = Imports.of.goods.and.services....of.GDP., fill = continent)) + geom_boxplot() +
xlab("Year") + ylab("Imports of Goods and Services (% of GDP)") +
ggtitle(label = "Asia vs. Europe Imports after 1990") +
theme_classic()
ggplotly(p) %>% layout(width = 800, boxmode = "group")
two_way <- aov(Imports.of.goods.and.services....of.GDP. ~ continent + Year, data = continent_import)
summary(two_way)
gapminder
top_density <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
group_by("Year") %>% arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) %>% mutate(rank = row_number())
top_density <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
group_by("Year") %>% arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) %>% mutate(rank = row_number())
top_density
top_density <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
group_by("Year") %>% arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) %>% mutate(rank = row_number()) %>% filter(rank <= 10)
top_density <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
group_by("Year") %>% arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) %>% mutate(rank = row_number()) %>% filter(rank <= 10)
top_density
top_density <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
group_by("Year") %>% arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) %>% mutate(rank = row_number())
top_density
top_density <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
group_by("Year") %>% arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) %>% mutate(rank = rank(Population.density..people.per.sq..km.of.land.area., ties.method="first")
top_density
top_density <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
group_by("Year") %>% arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) %>% mutate(rank = rank(Population.density..people.per.sq..km.of.land.area., ties.method="first"))
top_density
top_density <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
group_by("Year") %>% arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) %>% mutate(rank = rank(-Population.density..people.per.sq..km.of.land.area., ties.method="first"))
top_density
top_density <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) group_by("Year") %>% mutate(rank = rank(-Population.density..people.per.sq..km.of.land.area., ties.method="first"))
top_density <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) %>% group_by("Year") %>% mutate(rank = rank(-Population.density..people.per.sq..km.of.land.area., ties.method="first"))
top_density
top_density <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) %>% group_by("Year") %>% mutate(rank = rank(Population.density..people.per.sq..km.of.land.area., ties.method="first"))
top_density
top_density <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) %>% group_by("Year") %>% mutate(rank = order(Population.density..people.per.sq..km.of.land.area.)
top_density
top_density <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) %>% group_by("Year") %>% mutate(rank = order(Population.density..people.per.sq..km.of.land.area.))
top_density
top_density <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) %>% group_by("Year") %>% mutate(rank = row_number())
top_density
top_density <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) %>% group_by(Year) %>% mutate(rank = row_number())
top_density
top_density <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) %>% group_by(Year) %>% mutate(rank = row_number())
top_density %>% filter(rank <= 10)
top_density <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) %>% group_by(Year) %>% mutate(rank = row_number()) %>% filter(rank <= 10)
p <- top_density %>% ggplot(aes(factor(rank), Country.Name)) + geom_point() + facet_wrap(~Year)
top_density <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) %>% group_by(Year) %>% mutate(rank = row_number()) %>% filter(rank <= 10)
p <- top_density %>% ggplot(aes(factor(rank), Country.Name)) + geom_point() + facet_wrap(~Year)
p
top_density <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) %>% group_by(Year) %>% mutate(rank = row_number()) %>% filter(rank <= 10) %>% transform(Country.Name=reorder(Country.Name, -ranking))
top_density <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) %>% group_by(Year) %>% mutate(rank = row_number()) %>% filter(rank <= 10) %>% transform(Country.Name=reorder(Country.Name, -rank))
p <- top_density %>% ggplot(aes(factor(rank), Country.Name)) + geom_point() + facet_wrap(~Year)
p
top_density <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) %>% group_by(Year) %>% mutate(rank = row_number()) %>% filter(rank <= 10) %>% transform(Country.Name=reorder(Country.Name, -rank))
p <- top_density %>% ggplot(aes(Population.density..people.per.sq..km.of.land.area., Country.Name)) + geom_point() + facet_wrap(~Year)
p
top_density_year <- gapminder %>% select(Year, Country.Name, Population.density..people.per.sq..km.of.land.area.) %>% na.omit() %>%
arrange(Year, desc(Population.density..people.per.sq..km.of.land.area.)) %>% group_by(Year) %>% mutate(rank = row_number()) %>% filter(rank <= 10) %>% transform(Country.Name=reorder(Country.Name, -rank))
p <- top_density_year %>% ggplot(aes(Population.density..people.per.sq..km.of.land.area., Country.Name)) + geom_point() + facet_wrap(~Year)
p
top_density <- top_density_year %>% group_by(Country.Name) %>% summarize(avg_ranking = mean(ranking)) %>% arrange(Country.Name, desc(avg_ranking)) %>% head(10)
top_density <- top_density_year %>% group_by(Country.Name) %>% summarize(avg_ranking = mean(rank)) %>% arrange(avg_ranking) %>% head(10)
top_density <- top_density_year %>% group_by(Country.Name) %>% summarize(avg_ranking = mean(rank)) %>% arrange(avg_ranking) %>% head(10)
top_density <- top_density_year %>% group_by(Country.Name) %>% summarize(avg_ranking = mean(rank)) %>% arrange(avg_ranking) %>% head(10)
top_density
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
groupby(Country.Name) %>% summarize(life_exp_1962 = Life.expectancy.at.birth..total..years.[Year == 1962], life_exp_2007 = Life.expectancy.at.birth..total..years.[Year == 2007], Life_exp_diff = life_exp_2007 - life_exp_1962)
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
group_by(Country.Name) %>% summarize(life_exp_1962 = Life.expectancy.at.birth..total..years.[Year == 1962], life_exp_2007 = Life.expectancy.at.birth..total..years.[Year == 2007], Life_exp_diff = life_exp_2007 - life_exp_1962)
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
group_by(Country.Name) %>% summarize(life_exp_1962 = Life.expectancy.at.birth..total..years.[whihc(Year == 1962)], life_exp_2007 = Life.expectancy.at.birth..total..years.[which(Year == 2007)], Life_exp_diff = life_exp_2007 - life_exp_1962)
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
group_by(Country.Name) %>% summarize(life_exp_1962 = Life.expectancy.at.birth..total..years.[which(Year == 1962)], life_exp_2007 = Life.expectancy.at.birth..total..years.[which(Year == 2007)], Life_exp_diff = life_exp_2007 - life_exp_1962)
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962 || Year == 2007)
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962)
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962)
life_expectancy
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962 | Year == 2007)
life_expectancy
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962 | Year == 2007) %>% group_by(Country.Name)
life_expectancy
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962 | Year == 2007) %>% group_by(Country.Name) %>% summarize(life_exp_1962 = Life.expectancy.at.birth..total..years.[Year == 1962])
life_expectancy
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962 | Year == 2007) %>% group_by(Country.Name) %>% summarize(life_exp_1962 = Life.expectancy.at.birth..total..years.[Year == 1962], Life.expectancy.at.birth..total..years.[Year == 2007])
life_expectancy
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962 | Year == 2007) %>% group_by(Country.Name) %>% summarize(life_exp_1962 = Life.expectancy.at.birth..total..years.[Year == 1962], life_exp_2007 = Life.expectancy.at.birth..total..years.[Year == 2007], life_exp_diff = life_exp_2007 - life_exp_1962)
life_expectancy
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962 | Year == 2007) %>% group_by(Country.Name) %>% summarize(life_exp_1962 = Life.expectancy.at.birth..total..years.[Year == 1962], life_exp_2007 = Life.expectancy.at.birth..total..years.[Year == 2007], life_exp_diff = life_exp_2007 - life_exp_1962) %>% arrange(desc(life_exp_diff))
life_expectancy
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962 | Year == 2007) %>% group_by(Country.Name) %>% summarize(life_exp_1962 = Life.expectancy.at.birth..total..years.[Year == 1962], life_exp_2007 = Life.expectancy.at.birth..total..years.[Year == 2007], life_exp_diff = life_exp_2007 - life_exp_1962) %>% arrange(desc(life_exp_diff)) %>% head(10)
life_expectancy
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962 | Year == 2007) %>% group_by(Country.Name) %>% summarize(life_exp_1962 = Life.expectancy.at.birth..total..years.[Year == 1962], life_exp_2007 = Life.expectancy.at.birth..total..years.[Year == 2007], life_exp_diff = life_exp_2007 - life_exp_1962) %>% arrange(desc(life_exp_diff)) %>% head(10)
life_expectancy
P <- life_expectancy %>% ggplot(aes(Country.Name, life_exp_diff)) + geom_point(col="tomato2", size=3) +
geom_segment(aes(x=Country.Name,
xend=Country.Name,
y=min(lifeExpDiff),
yend=max(lifeExpDiff)),
linetype="dashed",
size=0.1) +
ylab("Difference in Life Expectancy between 2007 and 1962 (Years)") +
xlab("Country") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(title = "Top 20 Countries with Greatest Increase in Life Expectancy") +
coord_flip() + theme_classic()
P <- life_expectancy %>% ggplot(aes(Country.Name, life_exp_diff)) + geom_point(col="tomato2", size=3) +
geom_segment(aes(x=Country.Name,
xend=Country.Name,
y=min(lifeExpDiff),
yend=max(lifeExpDiff)),
linetype="dashed",
size=0.1) +
ylab("Difference in Life Expectancy between 2007 and 1962 (Years)") +
xlab("Country") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(title = "Top 20 Countries with Greatest Increase in Life Expectancy") +
coord_flip() + theme_classic()
p
P <- life_expectancy %>% ggplot(aes(Country.Name, life_exp_diff)) + geom_point(col="tomato2", size=3) +
geom_segment(aes(x=Country.Name,
xend=Country.Name,
y=min(lifeExpDiff),
yend=max(lifeExpDiff)),
linetype="dashed",
size=0.1) +
ylab("Difference in Life Expectancy between 2007 and 1962 (Years)") +
xlab("Country") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(title = "Top 20 Countries with Greatest Increase in Life Expectancy") +
coord_flip() + theme_classic()
p
p <- life_expectancy %>% ggplot(aes(Country.Name, life_exp_diff)) + geom_point(col="tomato2", size=3) +
geom_segment(aes(x=Country.Name,
xend=Country.Name,
y=min(lifeExpDiff),
yend=max(lifeExpDiff)),
linetype="dashed",
size=0.1) +
ylab("Difference in Life Expectancy between 2007 and 1962 (Years)") +
xlab("Country") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(title = "Top 20 Countries with Greatest Increase in Life Expectancy") +
coord_flip() + theme_classic()
p
p <- life_expectancy %>% ggplot(aes(Country.Name, life_exp_diff)) + geom_point(col="tomato2", size=3) +
geom_segment(aes(x=Country.Name,
xend=Country.Name,
y=min(life_exp_diff),
yend=max(life_exp_diff)),
linetype="dashed",
size=0.1) +
ylab("Difference in Life Expectancy between 2007 and 1962 (Years)") +
xlab("Country") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(title = "Top 20 Countries with Greatest Increase in Life Expectancy") +
coord_flip() + theme_classic()
p
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962 | Year == 2007) %>% group_by(Country.Name) %>% summarize(life_exp_1962 = Life.expectancy.at.birth..total..years.[Year == 1962], life_exp_2007 = Life.expectancy.at.birth..total..years.[Year == 2007], life_exp_diff = life_exp_2007 - life_exp_1962) %>% arrange(desc(life_exp_diff)) %>% head(10) %>% transform(Country.Name=reorder(Country.Name, -life_exp_diff))
life_expectancy
p <- life_expectancy %>% ggplot(aes(Country.Name, life_exp_diff)) + geom_point(col="tomato2", size=3) +
geom_segment(aes(x=Country.Name,
xend=Country.Name,
y=min(life_exp_diff),
yend=max(life_exp_diff)),
linetype="dashed",
size=0.1) +
ylab("Difference in Life Expectancy between 2007 and 1962 (Years)") +
xlab("Country") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(title = "Top 20 Countries with Greatest Increase in Life Expectancy") +
coord_flip() + theme_classic()
p
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962 | Year == 2007) %>% group_by(Country.Name) %>% summarize(life_exp_1962 = Life.expectancy.at.birth..total..years.[Year == 1962], life_exp_2007 = Life.expectancy.at.birth..total..years.[Year == 2007], life_exp_diff = life_exp_2007 - life_exp_1962) %>% arrange(desc(life_exp_diff)) %>% head(10) %>% transform(Country.Name=reorder(Country.Name, life_exp_diff))
life_expectancy
p <- life_expectancy %>% ggplot(aes(Country.Name, life_exp_diff)) + geom_point(col="tomato2", size=3) +
geom_segment(aes(x=Country.Name,
xend=Country.Name,
y=min(life_exp_diff),
yend=max(life_exp_diff)),
linetype="dashed",
size=0.1) +
ylab("Difference in Life Expectancy between 2007 and 1962 (Years)") +
xlab("Country") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(title = "Top 20 Countries with Greatest Increase in Life Expectancy") +
coord_flip() + theme_classic()
p
life_expectancy <- gapminder %>% select(Year, Country.Name, Life.expectancy.at.birth..total..years.) %>% na.omit() %>%
filter(Year == 1962 | Year == 2007) %>% group_by(Country.Name) %>% summarize(life_exp_1962 = Life.expectancy.at.birth..total..years.[Year == 1962], life_exp_2007 = Life.expectancy.at.birth..total..years.[Year == 2007], life_exp_diff = life_exp_2007 - life_exp_1962) %>% arrange(desc(life_exp_diff)) %>% head(20) %>% transform(Country.Name=reorder(Country.Name, life_exp_diff))
life_expectancy
p <- life_expectancy %>% ggplot(aes(Country.Name, life_exp_diff)) + geom_point(col="tomato2", size=3) +
geom_segment(aes(x=Country.Name,
xend=Country.Name,
y=min(life_exp_diff),
yend=max(life_exp_diff)),
linetype="dashed",
size=0.1) +
ylab("Difference in Life Expectancy between 2007 and 1962 (Years)") +
xlab("Country") + theme(axis.text.x = element_text(angle = 45, vjust = 0.5)) +
labs(title = "Top 20 Countries with Greatest Increase in Life Expectancy") +
coord_flip() + theme_classic()
p
setwd("~/Desktop/training-requirements/Basic Data Science Web Development")
install.packages("shiny")
library(shiny); runApp('~/Desktop/R.app.R')
runApp('~/Desktop/R.app.R')
runApp('~/Desktop/R.app.R')
setwd("~/Desktop/training-requirements/Basic Data Science Web Development")
source("~/.active-rstudio-document", echo=TRUE)
colnames(gapminder)
source("~/.active-rstudio-document", echo=TRUE)
gapminder <- read.csv(gapminder_clean.csv)
ui <- fluidPage(
titlePanel("Explore the Gapminder Dataset!")
fluidRow(
gapminder <- read.csv("gapminder_clean.csv")
colnames(gapminder) <- c("X", "Country", "Year", "Agriculture, value added (% of GDP)", "CO2 emissions (metric tons per capita)", "Domestic credit provided by financial sector (% of GDP)",
"Electric power consumption (kWh per capita)", "Energy use (kg of oil per capita)", "Exports of goods and services (% of GDP)", "Fertility rate, total (births per woman)",
"GDP growth (annual %)", "Imports of goods and services (% of GDP)", "Industry, value added (% of GDP)", "Inflation, GDP Deflator (annual %)", "Life expectancy at birth, total (years)",
"Population density (people per sq km of land area)", "Services, etc., value added (% of GDP)", "Population", "Continent", "GDP per capita")
gapminder
colnames(gapminder)
colnames(gapminder)[! colnames(gapminder) %in% c("X", "Country", "Year", "Population", "Continent")]
server <- function(input, output, session){
}
runApp('gapminder.app.R')
runApp('gapminder.app.R')
runApp('gapminder.app.R')
runApp('gapminder.app.R')
runApp('gapminder.app.R')
names(variables)
runApp('gapminder.app.R')
gapminder
colnames(gapminder)
gapminder %>% filter(Year == 1962) %>% ggplot(aes(x = "Agriculture, value added", y = "Electric power consumption (kWh per capita)")) + geom_point()
gapminder %>% filter(Year == 1962) %>% ggplot(aes(x = Agriculture, value added (% of GDP), y = Electric power consumption (kWh per capita))) + geom_point()
gapminder %>% filter(Year == 1962) %>% ggplot(aes(x = Agriculture, value added (\% of GDP), y = Electric power consumption (kWh per capita))) + geom_point()
gapminder$`Fertility rate, total (births per woman)`
gapminder$title
runApp('gapminder.app.R')
runApp('gapminder.app.R')
runApp('gapminder.app.R')
gapminder <- read.csv("gapminder_clean.csv") %>% filter(continent != "")
gapminder
runApp('gapminder.app.R')
variables
variables <- colnames(gapminder)[! colnames(gapminder) %in% c("X", "Country.Name", "Year", "pop", "continent")]
variables
new_names <- c("Agriculture, value added (% of GDP)", "CO2 emissions (metric tons per capita)", "Domestic credit provided by financial sector (% of GDP)",
"Electric power consumption (kWh per capita)", "Energy use (kg of oil per capita)", "Exports of goods and services (% of GDP)", "Fertility rate, total (births per woman)",
"GDP growth (annual %)", "Imports of goods and services (% of GDP)", "Industry, value added (% of GDP)", "Inflation, GDP Deflator (annual %)", "Life expectancy at birth, total (years)",
"Population density (people per sq km of land area)", "Services, etc., value added (% of GDP)", "GDP per capita")
setNames(variables, new_names)
setNames(new_names, variables)
runApp('gapminder.app.R')
runApp('gapminder.app.R')
names(gapminder)
gapminder[, get("X")]
gapminder[, "Country.Name"]
runApp('gapminder.app.R')
runApp('gapminder.app.R')
gapminder %>% pull("Country.Name")
runApp('gapminder.app.R')
gapminder %>% filter(Year == 1962) %>% ggplot(aes(x = Energy.use..kg.of.oil.equivalent.per.capita., y = Agriculture..value.added....of.GDP.)) + geom_point()
runApp('gapminder.app.R')
setNames(variables, new_names)
runApp('gapminder.app.R')
gapminder[, c["continent", "pop"]]
gapminder[, c[continent, pop]]
gapminder[, c(continent)]
gapminder[, c("continent", "pop")]
runApp('gapminder.app.R')
test <- gapminder[, c("continent", "pop")]
test$continent
runApp('gapminder.app.R')
test
test <- gapminder[, c("Country.Name", "continent", "pop", "gdpPerCap")]
test <- gapminder[, c("Country.Name", "continent", "pop", "gdpPercap")]
test
test %>% group_by('Country.Name')
test %>% group_by(Country.Name)
runApp('gapminder.app.R')
runApp('gapminder.app.R')
test <- setNames(variables, new_names)
test
variables
test <- setNames(new_names, variables)
test["GDP per capita"]
test
test["gdpPercap"]
runApp('gapminder.app.R')
runApp('gapminder.app.R')
runApp('gapminder.app.R')
runApp('gapminder.app.R')
runApp('gapminder.app.R')
fig
library(plotly)
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/job-automation-probability.csv')
fig <- df %>%
plot_ly(
type = 'scatter',
mode = 'markers',
x = ~prob,
y = ~Average.annual.wage,
marker = list(size = ~numbEmployed, sizeref = 4000, sizemode = 'area'),
color = ~education,
text = ~short.occupation,
hovertemplate = paste(
"<b>%{text}</b><br><br>",
"%{yaxis.title.text}: %{y:$,.0f}<br>",
"%{xaxis.title.text}: %{x:.0%}<br>",
"Number Employed: %{marker.size:,}",
"<extra></extra>"
)
)
fig <- fig %>%
layout(legend = list(orientation = 'h', y = -0.3))
fig
runApp('gapminder.app.R')
runApp('gapminder.app.R')
library(plotly)
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/job-automation-probability.csv')
fig <- df %>%
plot_ly(
type = 'scatter',
mode = 'markers',
x = ~prob,
y = ~Average.annual.wage,
marker = list(size = ~numbEmployed, sizeref = 4000, sizemode = 'area'),
color = ~education,
text = ~short.occupation,
hovertemplate = paste(
"<b>%{text}</b><br><br>",
"%{yaxis.title.text}: %{y:$,.0f}<br>",
"%{xaxis.title.text}: %{x:.0%}<br>",
"Number Employed: %{marker.size:,}",
"<extra></extra>"
)
)
fig
runApp('gapminder.app.R')
library(plotly)
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/job-automation-probability.csv')
fig <- df %>%
plot_ly(
type = 'scatter',
mode = 'markers',
x = ~prob,
y = ~Average.annual.wage,
marker = list(size = ~numbEmployed, sizeref = 4000, sizemode = 'area'),
)
library(plotly)
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/job-automation-probability.csv')
fig <- df %>%
plot_ly(
type = 'scatter',
mode = 'markers',
x = ~prob,
y = ~Average.annual.wage,
marker = list(size = ~numbEmployed, sizeref = 4000, sizemode = 'area')
)
)
library(plotly)
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/job-automation-probability.csv')
fig <- df %>%
plot_ly(
type = 'scatter',
mode = 'markers',
x = ~prob,
y = ~Average.annual.wage,
marker = list(size = ~numbEmployed, sizeref = 4000, sizemode = 'area')
)
fig
runApp('gapminder.app.R')
runApp('gapminder.app.R')
runApp('gapminder.app.R')
runApp('gapminder.app.R')
library(shiny); runApp('gapminder.app.R')
